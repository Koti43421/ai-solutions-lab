{
  "id": "lab1",
  "title": "Lab 1: Environment Setup & Project Introduction",
  "description": "Create accounts for the services we need, install coding tools on your computer, and get the AI receptionist app running on your machine.",
  "duration": "2-3 hours",
  "level": "Foundation",
  "technology": "Next.js + Setup",
  "sections": [
    {
      "id": "overview",
      "title": "Lab Overview",
      "content": "# Lab 1: Environment Setup & Project Introduction\n\n**Time Required:** 2-3 hours  \n**What You'll Do:** Create accounts for the services we need, install coding tools on your computer, and get the AI receptionist app running on your machine\n\n**Lab Collaborators:**\n- Edward Lampoh - Software Developer & Collaborator\n- Oluwafemi Adebayo, PhD - Academic Professor & Collaborator\n\n## Lab Overview\n\nThis lab has 3 main parts. **Complete each part fully before moving to the next.**\n\n### Part A: Create Your Accounts\n- Create GitHub account and connect it to Git\n- Sign up for Google Gemini API key\n- Create AWS account (free tier)\n- Sign up for Neon database\n- Sign up for Resend email service\n\n### Part B: Install Development Tools\n- Install Node.js and npm\n- Install Python 3.9+\n- Install Git\n- Install VS Code\n\n### Part C: Project Setup\n- Fork and clone repository\n- Install dependencies\n- Configure environment variables\n- Run application locally\n- Test complete flow\n\n*All these services have free tiers - you won't pay anything during this course.*"
    },
    {
      "id": "accounts",
      "title": "Part A: Create Your Accounts",
      "content": "# Part A: Create Your Accounts\n\n*All these services have free tiers - you won't pay anything during this course.*\n\n## 1. GitHub Setup\n\n**Create Account:**\n1. Go to [github.com](https://github.com) and click \"Sign up\"\n2. Use your student email if available (gets you free GitHub Pro features!)\n3. Choose a professional username (you'll use this publicly)\n4. Verify your email address\n\n**Connect Git to GitHub:**\n\n**Video Tutorials by Platform:**\n- **Windows:** [Git & GitHub Setup Tutorial](https://youtu.be/AdzKzlp66sQ?si=_B-0h1qM3OIV3bn5)\n- **Mac:** [Git & GitHub Setup for Mac](https://www.youtube.com/watch?v=p0Js7IF17yI)\n- **Linux:** [Git & GitHub Setup for Linux](https://www.youtube.com/watch?v=bc3_FL9zWWs)\n\n**Quick Setup Commands:**\n```bash\n# Tell Git your name (use your real name)\ngit config --global user.name \"Your Full Name\"\n\n# Tell Git your email (use the SAME email as your GitHub account)\ngit config --global user.email \"your.email@example.com\"\n```\n\n**Test Your Connection:**\n```bash\n# This should show your name and email\ngit config --global --list\n```\n\n**Success Check:** If you see your name and email listed, you're ready to go!\n\n## 2. Google Gemini API\n\n**What You Need:**\n- A Gmail or Google account (most people already have this!)\n\n**Get Your AI Key:**\n1. Search \"google gemini api\" in your browser\n2. Click on the \"Google AI Studio\" link that appears\n3. Sign in with your Google account\n4. Click \"Get Started\"\n5. Click \"Get a new API key\"\n6. Follow the instructions to create your key\n7. **Copy and save this key somewhere safe**\n\n## 3. AWS Account\n\n**Sign Up:**\n1. Go to [aws.amazon.com](https://aws.amazon.com)\n2. Click \"Create a Free Account\"\n3. You'll need to verify your phone number and add a payment method (but you won't be charged)\n4. Choose \"Basic Support - Free\" when asked\n\n**Note:** We'll only use free services! This is for later when we deploy your app.\n\n## 4. Neon Database\n\n**Sign Up:**\n1. Go to [neon.tech](https://neon.tech)\n2. Click \"Sign up with GitHub\" (easiest option)\n3. Create a new project and name it: \"ai-receptionist-lab\"\n4. **Copy the connection string** - it looks like:\n   ```\n   postgresql://neondb_owner:abc123@ep-cool-name-123456.us-east-1.aws.neon.tech/neondb?sslmode=require\n   ```\n5. **Save this entire string** - you'll paste it into your `.env` file next\n\n## 5. Resend Email Service\n\n**Sign Up:**\n1. Go to [resend.com](https://resend.com)\n2. Sign up for a free account\n3. Once logged in, get your API key from the dashboard\n4. **Save this key**\n\n### Part A Completion Check\n\n**Before proceeding to Part B, ensure you have:**\n- GitHub account created and Git configured\n- Google Gemini API key saved\n- AWS account created\n- Neon database project created with connection string saved\n- Resend API key saved\n\n**Have all 5 items checked?** â†’ Proceed to Part B\n**Missing something?** â†’ Complete the missing steps above"
    },
    {
      "id": "tools",
      "title": "Part B: Install Development Tools",
      "content": "# Part B: Install Development Tools\n\n## 1. Node.js Installation\n\n**All Platforms:**\n1. Go to [nodejs.org](https://nodejs.org)\n2. Download **LTS version** (v18 or v20)\n3. Install with default settings\n\n**Verify:**\n```bash\nnode --version\nnpm --version\n```\n\n## 2. Python Installation\n\n**Windows:**\n1. Go to [python.org/downloads](https://python.org/downloads)\n2. Download Python 3.9 or newer\n3. **Check \"Add Python to PATH\"** during installation\n\n**macOS:**\n```bash\nbrew install python@3.9\n```\n\n**Linux (Ubuntu/Debian):**\n```bash\nsudo apt update\nsudo apt install python3 python3-pip python3-venv\n```\n\n**Verify:**\n```bash\npython --version  # or python3 --version\npip --version      # or pip3 --version\n```\n\n## 3. Git Installation\n\n**Windows:**\n1. Download from [git-scm.com](https://git-scm.com)\n2. Install with default settings\n\n**macOS:**\n```bash\n# Git usually comes pre-installed, if not:\nbrew install git\n```\n\n**Linux:**\n```bash\nsudo apt install git\n```\n\n**Verify:**\n```bash\ngit --version\n```\n\n## 4. Code Editor (Recommended)\n\n**Visual Studio Code:**\n1. Download from [code.visualstudio.com](https://code.visualstudio.com)\n2. Install helpful extensions:\n   - Python\n   - JavaScript ES6 code snippets\n   - Prettier - Code formatter\n\n### Part B Completion Check\n\n**Before proceeding to Part C, ensure you have:**\n- Node.js and npm installed and verified\n- Python 3.9+ installed and verified\n- Git installed and verified\n- VS Code installed with recommended extensions\n\n**Have all 4 items checked?** â†’ Proceed to Part C\n**Missing something?** â†’ Complete the missing steps above"
    },
    {
      "id": "project-setup",
      "title": "Part C: Project Setup",
      "content": "# Part C: Project Setup\n\n## 1. Fork Repository\n\n**Why Fork?** You need your own copy to make changes throughout the course.\n\n1. Go to: https://github.com/edielam/ai-solutions-lab\n2. Click the **\"Fork\"** button (top-right corner)\n3. This creates your personal copy at `https://github.com/YOUR_USERNAME/ai-solutions-lab`\n\n## 2. Clone Your Fork\n\n**Important:** Clone YOUR fork, not the original repository!\n\n```bash\n# Replace YOUR_USERNAME with your actual GitHub username\ngit clone https://github.com/YOUR_USERNAME/ai-solutions-lab.git\ncd ai-solutions-lab\n```\n\n## 3. Install Dependencies\n\n**Frontend (Next.js):**\n```bash\nnpm install\n```\n\n**Backend (Python):**\n*No backend setup needed for Lab 1 - we'll do this in later labs.*\n\n## 4. Environment Configuration\n\nCreate `.env` file in the root directory:\n\n```env\n# Database (from Neon)\nDATABASE_URL=your_neon_connection_string_here\n\n# AI API (from Google)\nGOOGLE_GENERATIVE_AI_API_KEY=your_gemini_api_key_here\n\n# Email Service (from Resend)\nRESEND_API_KEY=your_resend_api_key_here\n\n# App Settings\nNEXT_PUBLIC_APP_URL=http://localhost:3000\nSECRET_KEY=change_this_to_something_secure\nDEBUG=true\n```\n\n## 5. Run the Application\n\n**Start Frontend:**\n```bash\nnpm run dev\n```\n\n**Open Browser:**\nGo to [http://localhost:3000](http://localhost:3000)\n\n## 6. Test the Complete Flow\n\n1. **Landing Page**: Click \"TRY IT FREE - NO SIGNUP\"\n2. **Business Setup**: \n   - Enter business name and description\n   - Choose a brand color\n   - Click \"Continue to Documents\"\n3. **Document Upload**: \n   - Skip for now or upload a sample document\n   - Click \"Continue\"\n4. **Generated URL**: \n   - Copy your unique chat URL\n   - Click \"Try Your AI Receptionist\"\n5. **Chat Interface**: \n   - Test asking questions\n   - Try booking an appointment\n   - Verify emails are sent (check spam folder)\n\n### Part C Completion Check\n\n**Before completing Lab 1, ensure you have:**\n- Forked the repository to your GitHub account\n- Cloned your fork to your computer\n- Installed frontend dependencies\n- Created `.env` file with all API keys\n- Application runs at http://localhost:3000\n- Free trial flow works end-to-end\n- Chat interface responds to messages\n- Appointment booking functions\n\n**Have all 8 items checked?** â†’ Lab 1 Complete! ðŸŽ‰\n**Missing something?** â†’ Complete the missing steps above"
    },
    {
      "id": "troubleshooting",
      "title": "Troubleshooting & Next Steps",
      "content": "# Troubleshooting\n\n**\"npm install\" fails:**\n- Try deleting `node_modules` and `package-lock.json`, then run `npm install` again\n\n**Python virtual environment issues:**\n- Make sure you're in the project directory\n- Try `python3 -m venv venv` instead of `python -m venv venv`\n\n**Database connection errors:**\n- Verify your Neon connection string is correct\n- Make sure there are no extra spaces in `.env` file\n\n**API key not working:**\n- Double-check the key is copied correctly\n\n# Next Steps & Pro Tips\n\n**Prepare for Lab 2:**\n- Keep all your API keys handy\n- Familiarize yourself with the chat interface\n- Try uploading different business documents\n- Think about how the AI decides when to book appointments\n\n**Ready for Lab 2?** You'll integrate real AI capabilities and start tracking performance with MLflow!\n\n**Pro Tips:**\n- **Save your API keys securely** - never commit them to Git\n- **Use meaningful commit messages** when pushing code\n- **Test thoroughly** - the free trial flow is what your users will experience\n\n## Docker Setup (Optional)\n\n**Install Docker Desktop:**\n1. Go to [docker.com/get-started](https://docker.com/get-started)\n2. Download for your OS\n3. Install and start Docker Desktop\n\n**Verify:**\n```bash\ndocker --version\ndocker run hello-world\n```\n\n**Note:** We'll use Docker in Lab 5 for containerization"
    }
  ]
}