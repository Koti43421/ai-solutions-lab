name: CI / Flask – Pytest

on:
  push:
    branches: [ main, develop, test-cicd ]
    paths:
      - 'mlops-service/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'mlops-service/**'

jobs:
  test:
    name: Flask – Pytest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mlops-service

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          # Ensure pytest is present even if not in requirements.txt
          pip install pytest pytest-flask

      # Create a minimal smoke test if you don't have any tests yet
      - name: Ensure at least one test exists
        run: |
          if ! ls -1 *_test.py test_*.py 2>/dev/null | grep -q .; then
            cat > test_smoke.py << 'PY'
import json
from app import app

def test_health():
    app.testing = True
    c = app.test_client()
    r = c.get("/health")
    assert r.status_code == 200
    data = r.get_json()
    assert data.get("service") == "mlops-service"
PY
          fi

      - name: Run tests
        run: pytest -v

      # (Optional) Quick startup probe
      - name: Probe Flask startup
        run: |
          python app.py &
          PID=$!
          sleep 3
          curl -fsS http://localhost:5001/health || (echo "Health failed"; kill $PID; exit 1)
          kill $PID || true
        continue-on-error: true
