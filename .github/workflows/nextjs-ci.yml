name: CI / Next.js – Lint/Build

on:
  push:
    branches: [ main, develop, test-cicd ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'
      - 'next.config.*'
      - 'tailwind.config.*'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
      - 'pnpm-lock.yaml'

jobs:
  test:
    name: Next.js – Lint/Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install deps for whichever manager/lockfile you actually have
      - name: Install dependencies
        shell: bash
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "Using pnpm"
            corepack enable
            pnpm install --no-frozen-lockfile
            echo "PKG_MGR=pnpm" >> $GITHUB_ENV
          elif [ -f package-lock.json ]; then
            echo "Using npm ci"
            npm ci
            echo "PKG_MGR=npm" >> $GITHUB_ENV
          else
            echo "No lockfile found; using npm install"
            npm install
            echo "PKG_MGR=npm" >> $GITHUB_ENV
          fi

      # Run tests only if a test script exists (don’t fail otherwise)
      - name: Run tests (if present)
        shell: bash
        run: |
          if npm run -s | grep -E '(^| )test( |$)'; then
            if [ "$PKG_MGR" = "pnpm" ]; then pnpm test || true; else npm test || true; fi
          else
            echo "No test script; skipping."
          fi

      # Run lint only if a lint script exists (don’t fail otherwise)
      - name: Run lint (if present)
        shell: bash
        run: |
          if npm run -s | grep -E '(^| )lint( |$)'; then
            if [ "$PKG_MGR" = "pnpm" ]; then pnpm run lint || true; else npm run lint || true; fi
          else
            echo "No lint script; skipping."
          fi

      # Build the app
      - name: Build
        shell: bash
        run: |
          if [ "$PKG_MGR" = "pnpm" ]; then pnpm run build; else npm run build; fi

      # Sanity check that the build output exists
      - name: Verify build output
        run: |
          test -d ".next" || (echo "Build failed - .next not found" && exit 1)
          ls -la .next
